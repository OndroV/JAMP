# 161111 - JAMP tutorial!#
setwd("~/Documents/UNI_und_VORLESUNGEN/GitHub/JAMP/") # set the path to the PrimerMinder folder you just downloaded#
#
# install the PrimerMiner package icl dependencies#
install.packages("JAMP", repos = NULL, type="source", dependencies=T)#
#
# load the package into R#
library("JAMP")#
#
setwd("Tutorial")#
# creating configuration file and batch downloading reads#
Core(module="ONE")
Core(module="bluberry")
Core(module="bluberry2")
# Core v0.1#
#
Core <- function(files="last", module=NA, letter="A"){#
#
if(files=="last"){ # look in log what last action was to load files from data folder!#
#
}#
#
ABC <- unlist(strsplit("ABCDEFGHIJKLMNOPQRSTUVWXYZ", ""))#
#
if(file.exists("log.txt")){#
log <- readLines("log.txt") # load log#
step <- which(log=="PROCESSING MODULE:") # detect processing modules#
} else {step <- 3}#
new_folder <- paste(ABC[length(step)+1], ") ", module, sep="")#
dir.create(new_folder)#
setwd(new_folder)#
#
# write mudule name in log#
temp <- paste("##########", Sys.time(), "PROCESSING MODULE:", new_folder, sep="\n")#
#
cat(file="../log.txt", temp, append=T, sep="\n")#
warning("Hello World")#
setwd("../") # remove and implement into modules!!!#
#
}
# 161111 - JAMP tutorial!#
setwd("~/Documents/UNI_und_VORLESUNGEN/GitHub/JAMP/") # set the path to the PrimerMinder folder you just downloaded#
#
# install the PrimerMiner package icl dependencies#
install.packages("JAMP", repos = NULL, type="source", dependencies=T)#
#
# load the package into R#
library("JAMP")#
#
setwd("Tutorial")#
# creating configuration file and batch downloading reads#
Core(module="bluberry2")
Core(module="bluberry2")
Core(module="bubble")
Core(module="GLumanda")
Core(module="Rela")
Core(module="Hello")
# Core v0.1#
#
Core <- function(files="last", module=NA, letter="A"){#
#
if(files=="last"){ # look in log what last action was to load files from data folder!#
#
}#
#
ABC <- unlist(strsplit("ABCDEFGHIJKLMNOPQRSTUVWXYZ", ""))#
#
if(file.exists("log.txt")){#
log <- readLines("log.txt") # load log#
step <- which(log=="PROCESSING MODULE:") # detect processing modules#
} else {step <- NULL}#
new_folder <- paste(ABC[length(step)+1], ") ", module, sep="")#
dir.create(new_folder)#
setwd(new_folder)#
#
# write mudule name in log#
temp <- paste("##########", Sys.time(), "PROCESSING MODULE:", new_folder, sep="\n")#
#
cat(file="../log.txt", temp, append=T, sep="\n")#
warning("Hello World")#
setwd("../") # remove and implement into modules!!!#
#
}
length(step)+1
step <- NULL
length(step)+1
# Core v0.1#
#
Core <- function(files="last", module=NA, letter="A"){#
#
if(files=="last"){ # look in log what last action was to load files from data folder!#
#
}#
#
ABC <- unlist(strsplit("ABCDEFGHIJKLMNOPQRSTUVWXYZ", ""))#
#
if(file.exists("log.txt")){#
log <- readLines("log.txt") # load log#
step <- which(log=="PROCESSING MODULE:") # detect processing modules#
} else {step <- NULL}#
#
# ADD routine to remove deleted folders from log!#
new_folder <- paste(ABC[length(step)+1], ") ", module, sep="")#
dir.create(new_folder)#
setwd(new_folder)#
#
# write mudule name in log#
temp <- paste("##########", Sys.time(), "PROCESSING MODULE:", new_folder, sep="\n")#
#
cat(file="../log.txt", temp, append=T, sep="\n")#
warning("Hello World")#
setwd("../") # remove and implement into modules!!!#
#
}
# 161111 - JAMP tutorial!#
setwd("~/Documents/UNI_und_VORLESUNGEN/GitHub/JAMP/") # set the path to the PrimerMinder folder you just downloaded#
#
# install the PrimerMiner package icl dependencies#
install.packages("JAMP", repos = NULL, type="source", dependencies=T)#
#
# load the package into R#
library("JAMP")#
#
setwd("Tutorial")#
# creating configuration file and batch downloading reads#
Core(module="Hello")#
Core(module="Mellofd")#
Core(module="NEw script")#
Core(module="this is a test")#
Core(module="Glumanda!!!")
# Core v0.1#
#
Core <- function(files="last", module=NA, letter="A"){#
#
if(files=="last"){ # look in log what last action was to load files from data folder!#
#
}#
#
ABC <- unlist(strsplit("ABCDEFGHIJKLMNOPQRSTUVWXYZ", ""))#
#
if(file.exists("log.txt")){#
log <- readLines("log.txt") # load log#
step <- which(log=="PROCESSING MODULE:") # detect processing modules#
} else {step <- NULL}#
#
# ADD routine to remove deleted folders from log!#
new_folder <- paste(ABC[length(step)+1], ") ", module, sep="")#
dir.create(new_folder)#
dir.create(paste(new_folder, "_data", sep="/"))#
dir.create(paste(new_folder, "_stats", sep="/"))#
setwd(new_folder)#
#
# write mudule name in log#
temp <- paste("##########", Sys.time(), "PROCESSING MODULE:", new_folder, sep="\n")#
#
cat(file="../log.txt", temp, append=T, sep="\n")#
warning("Hello World")#
setwd("../") # remove and implement into modules!!!#
#
}
# 161111 - JAMP tutorial!#
setwd("~/Documents/UNI_und_VORLESUNGEN/GitHub/JAMP/") # set the path to the PrimerMinder folder you just downloaded#
#
# install the PrimerMiner package icl dependencies#
install.packages("JAMP", repos = NULL, type="source", dependencies=T)#
#
# load the package into R#
library("JAMP")#
#
setwd("Tutorial")#
# creating configuration file and batch downloading reads#
Core(module="Hello")#
Core(module="Mellofd")#
Core(module="NEw script")#
Core(module="this is a test")#
Core(module="Glumanda!!!")
Core(module="Hello")#
Core(module="Mellofd")#
Core(module="NEw script")#
Core(module="this is a test")#
Core(module="Glumanda!!!")
delete_data=F
# Core v0.1#
#
Core <- function(files="last", module=NA, letter="A", delete_data=F){#
#
if(files=="last"){ # look in log what last action was to load files from data folder!#
#
}#
#
ABC <- unlist(strsplit("ABCDEFGHIJKLMNOPQRSTUVWXYZ", ""))#
#
if(file.exists("log.txt")){#
log <- readLines("log.txt") # load log#
step <- which(log=="PROCESSING MODULE:") # detect processing modules#
} else {step <- NULL}#
#
# ADD routine to remove deleted folders from log!#
new_folder <- paste(ABC[length(step)+1], ") ", module, sep="")#
dir.create(new_folder)#
dir.create(paste(new_folder, "_data", sep="/"))#
dir.create(paste(new_folder, "_stats", sep="/"))#
setwd(new_folder)#
#
# write mudule name in log#
temp <- paste("##########", Sys.time(), "PROCESSING MODULE:", new_folder, sep="\n")#
#
cat(file="../log.txt", temp, append=T, sep="\n")#
if(delete_data){#
cat(file="robots.txt", "delete_data=T", append=T, sep="\n")#
#
}#
warning("Hello World")#
setwd("../") # remove and implement into modules!!!#
#
}
step
step[length(step)]
# Core v0.1#
#
Core <- function(files="last", module=NA, letter="A", delete_data=F){#
#
if(files=="last"){ # look in log what last action was to load files from data folder!#
#
}#
#
ABC <- unlist(strsplit("ABCDEFGHIJKLMNOPQRSTUVWXYZ", ""))#
#
if(file.exists("log.txt")){#
log <- readLines("log.txt") # load log#
step <- which(log=="PROCESSING MODULE:") # detect processing modules#
} else {step <- NULL}#
#
# ADD routine to remove deleted folders from log!#
new_folder <- paste(ABC[length(step)+1], ") ", module, sep="")#
dir.create(new_folder)#
dir.create(paste(new_folder, "_data", sep="/"))#
dir.create(paste(new_folder, "_stats", sep="/"))#
setwd(new_folder)#
#
# write mudule name in log#
temp <- paste("##########", Sys.time(), "PROCESSING MODULE:", new_folder, sep="\n")#
#
cat(file="../log.txt", temp, append=T, sep="\n")#
if(delete_data){#
cat(file="robots.txt", "delete_data=T", "\n", "last_data=\"", step[length(step)], "\"", append=T, sep="\n")#
}#
warning("Hello World")#
setwd("../") # remove and implement into modules!!!#
#
}
Core(module="Hello")#
Core(module="Mellofd")#
Core(module="NEw script")#
Core(module="this is a test")#
Core(module="Glumanda!!!")
cat(file="robots.txt", "delete_data=T", "\n", "last_data=\"", step[length(step)], "\"", append=T, sep="\n")
# Core v0.1#
#
Core <- function(files="last", module=NA, letter="A", delete_data=F){#
#
if(files=="last"){ # look in log what last action was to load files from data folder!#
#
}#
#
ABC <- unlist(strsplit("ABCDEFGHIJKLMNOPQRSTUVWXYZ", ""))#
#
if(file.exists("log.txt")){#
log <- readLines("log.txt") # load log#
step <- which(log=="PROCESSING MODULE:") # detect processing modules#
} else {step <- NULL}#
#
# ADD routine to remove deleted folders from log!#
new_folder <- paste(ABC[length(step)+1], ") ", module, sep="")#
dir.create(new_folder)#
dir.create(paste(new_folder, "_data", sep="/"))#
dir.create(paste(new_folder, "_stats", sep="/"))#
setwd(new_folder)#
#
# write mudule name in log#
temp <- paste("##########", Sys.time(), "PROCESSING MODULE:", new_folder, sep="\n")#
#
cat(file="../log.txt", temp, append=T, sep="\n")#
cat(file="robots.txt", "delete_data=", delete_data, "\n", "last_data=\"", step[length(step)], "\"", append=T, sep="\n")#
warning("Hello World")#
setwd("../") # remove and implement into modules!!!#
#
}
Core(module="Hello")#
Core(module="Mellofd")#
Core(module="NEw script")#
Core(module="this is a test")#
Core(module="Glumanda!!!")
# Core v0.1#
#
Core <- function(files="last", module=NA, letter="A", delete_data=F){#
#
if(files=="last"){ # look in log what last action was to load files from data folder!#
#
}#
#
ABC <- unlist(strsplit("ABCDEFGHIJKLMNOPQRSTUVWXYZ", ""))#
#
if(file.exists("log.txt")){#
log <- readLines("log.txt") # load log#
step <- which(log=="PROCESSING MODULE:") # detect processing modules#
} else {step <- NULL}#
#
# ADD routine to remove deleted folders from log!#
new_folder <- paste(ABC[length(step)+1], ") ", module, sep="")#
dir.create(new_folder)#
dir.create(paste(new_folder, "_data", sep="/"))#
dir.create(paste(new_folder, "_stats", sep="/"))#
setwd(new_folder)#
#
# write mudule name in log#
temp <- paste("##########", Sys.time(), "PROCESSING MODULE:", new_folder, sep="\n")#
#
cat(file="../log.txt", temp, append=T, sep="\n")#
cat(file="robots.txt", "delete_data=", delete_data, "\n", "last_data=\"", step[length(step)], "\"\n", append=T, sep="")#
warning("Hello World")#
setwd("../") # remove and implement into modules!!!#
#
}
Core(module="Hello")#
Core(module="Mellofd")#
Core(module="NEw script")#
Core(module="this is a test")#
Core(module="Glumanda!!!")
step[length(step)]
step
# Core v0.1#
#
Core <- function(files="last", module=NA, letter="A", delete_data=F){#
#
if(files=="last"){ # look in log what last action was to load files from data folder!#
#
}#
#
ABC <- unlist(strsplit("ABCDEFGHIJKLMNOPQRSTUVWXYZ", ""))#
#
if(file.exists("log.txt")){#
log <- readLines("log.txt") # load log#
step <- which(log=="PROCESSING MODULE:") # detect processing modules#
} else {step <- NULL}#
#
# ADD routine to remove deleted folders from log!#
new_folder <- paste(ABC[length(step)+1], ") ", module, sep="")#
dir.create(new_folder)#
dir.create(paste(new_folder, "_data", sep="/"))#
dir.create(paste(new_folder, "_stats", sep="/"))#
setwd(new_folder)#
#
# write mudule name in log#
temp <- paste("##########", Sys.time(), "PROCESSING MODULE:", new_folder, sep="\n")#
#
cat(file="../log.txt", temp, append=T, sep="\n")#
cat(file="robots.txt", "delete_data=", delete_data, "\n", "last_data=\"", log[step[length(step)]+1], "\"\n", append=T, sep="")#
warning("Hello World")#
setwd("../") # remove and implement into modules!!!#
#
}
Core(module="Hello")#
Core(module="Mellofd")#
Core(module="NEw script")#
Core(module="this is a test")#
Core(module="Glumanda!!!")
setwd("~/Documents/UNI_und_VORLESUNGEN/GitHub/JAMP/") # set the path to the PrimerMinder folder you just downloaded
setwd("Tutorial")
Core(module="Hello")
length(step)
step[length(step)]
step[length(step)]+1
log[step[length(step)]+1]
length(step)
step
# Core v0.1#
#
Core <- function(files="last", module=NA, letter="A", delete_data=F){#
#
if(files=="last"){ # look in log what last action was to load files from data folder!#
#
}#
#
ABC <- unlist(strsplit("ABCDEFGHIJKLMNOPQRSTUVWXYZ", ""))#
#
if(file.exists("log.txt")){#
log <- readLines("log.txt") # load log#
step <- which(log=="PROCESSING MODULE:") # detect processing modules#
} else {step <- NULL}#
#
# ADD routine to remove deleted folders from log!#
new_folder <- paste(ABC[length(step)+1], ") ", module, sep="")#
dir.create(new_folder)#
dir.create(paste(new_folder, "_data", sep="/"))#
dir.create(paste(new_folder, "_stats", sep="/"))#
setwd(new_folder)#
#
# write mudule name in log#
temp <- paste("##########", Sys.time(), "PROCESSING MODULE:", new_folder, sep="\n")#
#
cat(file="../log.txt", temp, append=T, sep="\n")#
#
if(is.null(step)){temp <- NA} else {temp <- log[step[length(step)]+1]}#
cat(file="robots.txt", "delete_data=", delete_data, "\n", "last_data=\"", temp, "\"\n", append=T, sep="")#
warning("Hello World")#
setwd("../") # remove and implement into modules!!!#
#
}
setwd("~/Documents/UNI_und_VORLESUNGEN/GitHub/JAMP/") # set the path to the PrimerMinder folder you just downloaded#
#
# install the PrimerMiner package icl dependencies#
install.packages("JAMP", repos = NULL, type="source", dependencies=T)#
#
# load the package into R#
library("JAMP")#
#
setwd("Tutorial")#
# creating configuration file and batch downloading reads
Core(module="Hello")
Core(module="Mellofd")
Core(module="NEw script")
Core(module="this is a test")
Core(module="Glumanda!!!")
ABC
ABC <- unlist(strsplit("ABCDEFGHIJKLMNOPQRSTUVWXYZ", ""))
ABC
paste(Z, 1:100)
paste("Z", 1:100)
paste("Z", 1:100, sep="")
ABC <- unlist(strsplit("ABCDEFGHIJKLMNOPQRSTUVWXYZ", ""))#
ABC <- c(ABC, paste("Z", 1:100, sep=""))
ABC
ABC <- unlist(strsplit("ABCDEFGHIJKLMNOPQRSTUVWXYZ", ""))
ABC
length(ABC)
length(ABC)-100
ABC <- unlist(strsplit("ABCDEFGHIJKLMNOPQRSTUVWXYZ", ""))#
ABC <- c(ABC, paste("Z", 1:74, sep=""))
ABC
length(ABC)
# Core v0.1#
#
Core <- function(files="last", module=NA, letter="A", delete_data=F){#
#
if(files=="last"){ # look in log what last action was to load files from data folder!#
#
}#
#
ABC <- unlist(strsplit("ABCDEFGHIJKLMNOPQRSTUVWXYZ", ""))#
ABC <- c(ABC, paste("Z", 1:74, sep=""))#
#
if(file.exists("log.txt")){#
log <- readLines("log.txt") # load log#
step <- which(log=="PROCESSING MODULE:") # detect processing modules#
} else {step <- NULL}#
#
# ADD routine to remove deleted folders from log!#
new_folder <- paste(ABC[length(step)+1], ") ", module, sep="")#
dir.create(new_folder)#
dir.create(paste(new_folder, "_data", sep="/"))#
dir.create(paste(new_folder, "_stats", sep="/"))#
setwd(new_folder)#
#
# write mudule name in log#
temp <- paste("##########", Sys.time(), "PROCESSING MODULE:", new_folder, sep="\n")#
#
cat(file="../log.txt", temp, append=T, sep="\n")#
#
if(is.null(step)){temp <- NA} else {temp <- log[step[length(step)]+1]}#
cat(file="robots.txt", "delete_data=", delete_data, "\n", "last_data=\"", temp, "\"\n", append=T, sep="")#
warning("Hello World")#
setwd("../") # remove and implement into modules!!!#
#
}
# Core v0.1#
#
Core <- function(files="last", module=NA, letter="A", delete_data=F){#
#
if(files=="last"){ # look in log what last action was to load files from data folder!#
#
}#
#
ABC <- unlist(strsplit("ABCDEFGHIJKLMNOPQRSTUVWXYZ", ""))#
ABC <- c(ABC, paste("Z", 1:74, sep=""))#
#
if(file.exists("log.txt")){#
log <- readLines("log.txt") # load log#
step <- which(log=="PROCESSING MODULE:") # detect processing modules#
} else {step <- NULL}#
#
# ADD routine to remove deleted folders from log!#
new_folder <- paste(ABC[length(step)+1], ") ", module, sep="")#
dir.create(new_folder)#
dir.create(paste(new_folder, "_data", sep="/"))#
dir.create(paste(new_folder, "_stats", sep="/"))#
setwd(new_folder)#
#
# write mudule name in log#
temp <- paste("##########", Sys.time(), "PROCESSING MODULE:", new_folder,"\n\n" sep="\n")#
#
cat(file="../log.txt", temp, append=T, sep="\n")#
#
if(is.null(step)){temp <- NA} else {temp <- log[step[length(step)]+1]}#
cat(file="robots.txt", "delete_data=", delete_data, "\n", "last_data=\"", temp, "\"\n", append=T, sep="")#
warning("Hello World")#
setwd("../") # remove and implement into modules!!!#
#
}
# Core v0.1#
#
Core <- function(files="last", module=NA, letter="A", delete_data=F){#
#
if(files=="last"){ # look in log what last action was to load files from data folder!#
#
}#
#
ABC <- unlist(strsplit("ABCDEFGHIJKLMNOPQRSTUVWXYZ", ""))#
ABC <- c(ABC, paste("Z", 1:74, sep=""))#
#
if(file.exists("log.txt")){#
log <- readLines("log.txt") # load log#
step <- which(log=="PROCESSING MODULE:") # detect processing modules#
} else {step <- NULL}#
#
# ADD routine to remove deleted folders from log!#
new_folder <- paste(ABC[length(step)+1], ") ", module, sep="")#
dir.create(new_folder)#
dir.create(paste(new_folder, "_data", sep="/"))#
dir.create(paste(new_folder, "_stats", sep="/"))#
setwd(new_folder)#
#
# write mudule name in log#
temp <- paste("##########", Sys.time(), "PROCESSING MODULE:", new_folder,"\n\n", sep="\n")#
#
cat(file="../log.txt", temp, append=T, sep="\n")#
#
if(is.null(step)){temp <- NA} else {temp <- log[step[length(step)]+1]}#
cat(file="robots.txt", "delete_data=", delete_data, "\n", "last_data=\"", temp, "\"\n", append=T, sep="")#
warning("Hello World")#
setwd("../") # remove and implement into modules!!!#
#
}
# 161111 - JAMP tutorial!#
setwd("~/Documents/UNI_und_VORLESUNGEN/GitHub/JAMP/") # set the path to the PrimerMinder folder you just downloaded#
#
# install the PrimerMiner package icl dependencies#
install.packages("JAMP", repos = NULL, type="source", dependencies=T)#
#
# load the package into R#
library("JAMP")#
#
setwd("Tutorial")#
# creating configuration file and batch downloading reads#
Core(module="Hello")#
Core(module="Mellofd")#
Core(module="NEw script")#
Core(module="this is a test")#
Core(module="Glumanda!!!")
Core(module="Hello")#
Core(module="Mellofd")#
Core(module="NEw script")#
Core(module="this is a test")#
Core(module="Glumanda!!!")
# Core v0.1#
#
Core <- function(files="last", module=NA, letter="A", delete_data=F){#
#
if(files=="last"){ # look in log what last action was to load files from data folder!#
#
}#
#
ABC <- unlist(strsplit("ABCDEFGHIJKLMNOPQRSTUVWXYZ", ""))#
ABC <- c(ABC, paste("Z", 1:74, sep=""))#
#
if(file.exists("log.txt")){#
log <- readLines("log.txt") # load log#
step <- which(log=="PROCESSING MODULE:") # detect processing modules#
} else {step <- NULL}#
#
# ADD routine to remove deleted folders from log!#
new_folder <- paste(ABC[length(step)+1], ") ", module, sep="")#
dir.create(new_folder)#
dir.create(paste(new_folder, "_data", sep="/"))#
dir.create(paste(new_folder, "_stats", sep="/"))#
setwd(new_folder)#
#
# write mudule name in log#
temp <- paste("##########", Sys.time(), "PROCESSING MODULE:", new_folder,"\n", sep="\n")#
#
cat(file="../log.txt", temp, append=T, sep="\n")#
#
if(is.null(step)){temp <- NA} else {temp <- log[step[length(step)]+1]}#
cat(file="robots.txt", "delete_data=", delete_data, "\n", "last_data=\"", temp, "\"\n", append=T, sep="")#
warning("Hello World")#
setwd("../") # remove and implement into modules!!!#
#
}
#numbering for folders#
ABC <- unlist(strsplit("ABCDEFGHIJKLMNOPQRSTUVWXYZ", ""))#
ABC <- c(ABC, paste("Z0", 1:9, sep=""), paste("Z0", 10:74, sep=""))
ABC
#numbering for folders#
ABC <- unlist(strsplit("ABCDEFGHIJKLMNOPQRSTUVWXYZ", ""))#
ABC <- c(ABC, paste("Z0", 1:9, sep=""), paste("Z", 10:74, sep=""))
ABC
# 161111 - JAMP tutorial!#
setwd("~/Documents/UNI_und_VORLESUNGEN/GitHub/JAMP/") # set the path to the PrimerMinder folder you just downloaded#
#
#install.packages("seqinr", dependencies=T)#
#
# install the PrimerMiner package icl dependencies#
install.packages("JAMP", repos = NULL, type="source")
